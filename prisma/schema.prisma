generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  relationMode = "prisma"
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  projects      Project[]
  grants        Grant[]
  metrics       Metric[]
  organisation  Organisation? @relation(fields: [organisationId], references: [id])
  organisationId String?
  role          UserRole  @default(VIEWER)
}

model Organisation {
  id          String    @id @default(uuid())
  name        String
  description String?
  logo        String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  users       User[]
  projects    Project[]
}

model Project {
  id            String    @id @default(uuid())
  createdAt     DateTime  @default(now())
  title         String
  description   String?
  budget        Float
  raised        Float     @default(0)
  imageUrl      String?
  status        String    @default("active")
  updatedAt     DateTime  @updatedAt
  grants        Grant[]   @relation("ProjectGrants")
  metrics       Metric[]
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  organisation  Organisation? @relation(fields: [organisationId], references: [id])
  organisationId String?
}

model Grant {
  id                String    @id @default(uuid())
  createdAt         DateTime  @default(now())
  title             String
  amount            Float
  description       String?
  eligibility       String?
  applicationDetails String?
  logo              String?
  updatedAt         DateTime  @updatedAt
  status            String    // researching, eligible, applied, successful, unsuccessful
  projects          Project[] @relation("ProjectGrants")
  deadline          DateTime?
  user              User      @relation(fields: [userId], references: [id])
  userId            String
}

model Metric {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  name        String
  value       Float
  target      Float
  unit        String
  project     Project   @relation(fields: [projectId], references: [id])
  projectId   String
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String
}

enum UserRole {
  ADMIN
  EDITOR
  VIEWER
}
